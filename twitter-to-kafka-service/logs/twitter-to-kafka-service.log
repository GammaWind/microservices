2021-07-23 09:16:11 [background-preinit] WARN  o.s.h.c.j.Jackson2ObjectMapperBuilder - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2021-07-23 09:16:12 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2021-07-23 09:16:14 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2021-07-23 09:16:14 [main] WARN  o.s.c.c.c.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/twitter-to-kafka-service,config-client/twitter-to-kafka": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-07-23 09:16:14 [main] INFO  c.m.t.t.k.s.TwitterToKafkaService - The following profiles are active: twitter-to-kafka
2021-07-23 09:16:15 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=813218ba-a9da-37b2-9027-49e71343ed0a
2021-07-23 09:16:15 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.retry.annotation.RetryConfiguration' of type [org.springframework.retry.annotation.RetryConfiguration$$EnhancerBySpringCGLIB$$baf3319e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-07-23 09:16:15 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-23 09:16:16 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2021-07-23 09:16:16 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2021-07-23 09:16:16 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1627011976013
2021-07-23 09:16:18 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8080
2021-07-23 09:16:18 [main] INFO  c.m.t.t.k.s.TwitterToKafkaService - Started TwitterToKafkaService in 8.091 seconds (JVM running for 9.211)
2021-07-23 09:16:18 [main] INFO  c.m.t.t.k.s.TwitterToKafkaService - app started...
2021-07-23 09:16:18 [main] INFO  c.m.k.admin.client.KafkaAdminClient - Creating 1 topics(s), attempt 0
2021-07-23 09:16:18 [main] INFO  c.m.k.admin.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-07-23 09:16:18 [main] INFO  c.m.k.admin.client.KafkaAdminClient - Reading kafka topic [twitter-topic], attempt 0
2021-07-23 09:16:18 [main] INFO  c.m.t.t.k.s.i.i.KafkaStreamInitializer - topics with name twitter-topic are ready
2021-07-23 09:16:18 [main] INFO  c.m.t.t.k.s.r.i.TwitterKafkaStreamRunner - started filtering twitter stream for keywords {}[Java, Microservices, Kafka, Elasticsearch]
2021-07-23 09:16:18 [Twitter Stream consumer /  [1][initializing]] INFO  twitter4j.TwitterStreamImpl - Establishing connection.
2021-07-23 09:16:20 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Connection established.
2021-07-23 09:16:20 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Receiving status stream.
2021-07-23 09:16:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.t.t.k.s.l.TwitterKafkaStatusListener - Received status text マイクラサバイバル(java)したい人でIN率高い人いないかなぁ。 sending to kafka topic twitter-topic
2021-07-23 09:16:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1071234842434498561, "id": 1418417150889402369, "text": "マイクラサバイバル(java)したい人でIN率高い人いないかなぁ。", "createdAt": 1627011976000}' to topic='twitter-topic'
2021-07-23 09:16:20 [Twitter4J Async Dispatcher[0]] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2021-07-23 09:16:20 [Twitter4J Async Dispatcher[0]] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.remove.java.properties = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.token = [hidden]
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	proxy.host = 
	proxy.port = -1
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.2
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	use.latest.version = false
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2021-07-23 09:16:20 [Twitter4J Async Dispatcher[0]] WARN  o.a.k.c.producer.ProducerConfig - The configuration 'internal.auto.downgrade.txn.commit' was supplied but isn't a known config.
2021-07-23 09:16:20 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.5.1
2021-07-23 09:16:20 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 0efa8fb0f4c73d92
2021-07-23 09:16:20 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1627011980963
2021-07-23 09:16:20 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: E_3E46MCT-ed9abLBvaOOg
2021-07-23 09:16:21 [Twitter4J Async Dispatcher[0]] INFO  c.m.t.t.k.s.l.TwitterKafkaStatusListener - Received status text Kafka, incontentabile rispetto alla qualità della sua scrittura, avrebbe voluto che alla sua morte tutti i suoi inediti venissero bruciati. Fu solo grazie a Max Brod che quel materiale di inestimabile valore venne pubblicato.
#ConKafka #SalaLettura https://t.co/GYHyxvC1ER sending to kafka topic twitter-topic
2021-07-23 09:16:21 [Twitter4J Async Dispatcher[0]] INFO  c.m.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1363745763793244163, "id": 1418417153414516738, "text": "Kafka, incontentabile rispetto alla qualità della sua scrittura, avrebbe voluto che alla sua morte tutti i suoi inediti venissero bruciati. Fu solo grazie a Max Brod che quel materiale di inestimabile valore venne pubblicato.\n#ConKafka #SalaLettura https://t.co/GYHyxvC1ER", "createdAt": 1627011976000}' to topic='twitter-topic'
2021-07-23 09:16:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.t.t.k.s.l.TwitterKafkaStatusListener - Received status text RT @Cloudcrem: https://t.co/vhuqxcM3Lr  automate posting  facebook groups and pages  selenium python 0#recruitment #Careers #Jobs #hiring #… sending to kafka topic twitter-topic
2021-07-23 09:16:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1320998551942475781, "id": 1418417157881356290, "text": "RT @Cloudcrem: https://t.co/vhuqxcM3Lr  automate posting  facebook groups and pages  selenium python 0#recruitment #Careers #Jobs #hiring #\u2026", "createdAt": 1627011978000}' to topic='twitter-topic'
2021-07-23 09:16:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.t.t.k.s.l.TwitterKafkaStatusListener - Received status text RT @MathieuSlama: Actuellement à l’Assemblée, Véran explique que pour les trajets de 10 minutes en TGV, le pass sanitaire n’est pas obligat… sending to kafka topic twitter-topic
2021-07-23 09:16:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1724436392, "id": 1418417159965974532, "text": "RT @MathieuSlama: Actuellement à l\u2019Assemblée, Véran explique que pour les trajets de 10 minutes en TGV, le pass sanitaire n\u2019est pas obligat\u2026", "createdAt": 1627011978000}' to topic='twitter-topic'
2021-07-23 09:16:24 [Twitter4J Async Dispatcher[0]] INFO  c.m.t.t.k.s.l.TwitterKafkaStatusListener - Received status text RT @Doxyaxone: Backend is where I thrive.

#Python #BigData #Analytics #AI #DataScience #IoT #IIoT #Azure #PyTorch #RStats #DotNet #C #CPP… sending to kafka topic twitter-topic
2021-07-23 09:16:24 [Twitter4J Async Dispatcher[0]] INFO  c.m.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 955289710020124672, "id": 1418417167113105413, "text": "RT @Doxyaxone: Backend is where I thrive.\n\n#Python #BigData #Analytics #AI #DataScience #IoT #IIoT #Azure #PyTorch #RStats #DotNet #C #CPP\u2026", "createdAt": 1627011980000}' to topic='twitter-topic'
2021-07-23 09:16:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.t.t.k.s.l.TwitterKafkaStatusListener - Received status text RT @MegumiTakeda4: https://t.co/T0umUWzuKT

米国内で激しく反目しあっている過激アニマルライツ団体PETAと、人道主義を標榜し正統派動物福祉を主張しているヒューメインソサエティ。どっちも同じガイキチ愛誤だぜー、言っていることが同じ、とい… sending to kafka topic twitter-topic
2021-07-23 09:16:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1298824119945846784, "id": 1418417182501793794, "text": "RT @MegumiTakeda4: https://t.co/T0umUWzuKT\n\n米国内で激しく反目しあっている過激アニマルライツ団体PETAと、人道主義を標榜し正統派動物福祉を主張しているヒューメインソサエティ。どっちも同じガイキチ愛誤だぜー、言っていることが同じ、とい\u2026", "createdAt": 1627011983000}' to topic='twitter-topic'
2021-07-23 09:16:30 [Twitter4J Async Dispatcher[0]] INFO  c.m.t.t.k.s.l.TwitterKafkaStatusListener - Received status text RT @Doxyaxone: Backend is where I thrive.

#Python #BigData #Analytics #AI #DataScience #IoT #IIoT #Azure #PyTorch #RStats #DotNet #C #CPP… sending to kafka topic twitter-topic
2021-07-23 09:16:30 [Twitter4J Async Dispatcher[0]] INFO  c.m.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1337430590241562626, "id": 1418417189678469123, "text": "RT @Doxyaxone: Backend is where I thrive.\n\n#Python #BigData #Analytics #AI #DataScience #IoT #IIoT #Azure #PyTorch #RStats #DotNet #C #CPP\u2026", "createdAt": 1627011985000}' to topic='twitter-topic'
